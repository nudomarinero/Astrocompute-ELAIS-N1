---
- name: Run the calibration process
  hosts: subtract
  vars:
  - pipeline_name: "pre_facet_subtract"
  - bucket_name: "lofar-elais-n1-calibration"
  - dataset_name: "011"
  tasks:
  - name: Gather facts
    action: ec2_facts
    tags:
    - facts
    
  - name: launch profile process
    command: "screen -dmS profile bash -c 'cd /mnt/scratch/data/log; python /home/ubuntu/astrocompute/pipeline/scripts/profile_node.py'; sleep 1"
    async: 45
    poll: 0
    tags:
    - profile
  
  #- name: Create pipeline directory
    #file: >
      #path=/mnt/scratch/data/cal/{{ pipeline_name }}
      #state=directory
      #owner=ubuntu 
      #group=ubuntu 
      #mode=0755
    #tags:
    #- download_cal
  
  - name: Generate download script
    template: >
      src=templates/download_data_pretarget.sh.j2 
      dest=/home/ubuntu/download_data_pretarget.sh
      owner=ubuntu 
      group=ubuntu 
      mode=0755
    tags:
    - download_pretarget
  
  #- name: Check if the cal data is there
    #stat: path=/mnt/scratch/data/cal/{{ pipeline_name }}/fitted_data_dclock_caldata_transfer_1st.sm.npy
    #register: cal_npy
    #tags:
    #- download_pretarget
  
  - name: Execute download of data script
    command: ./download_data_pretarget.sh 
    args:
      chdir: /home/ubuntu
    #async: 500
    #poll: 10
    #when: download_pretarget.stat.exists == False
    tags:
    - download_pretarget
  
  #- name: Check if the raw data is there
    #stat: path=/mnt/scratch/data/raw/downloaded.txt
    #register: data_downloaded
    #tags:
    #- download
    
  ## Run only if the data is not already downloaded!!
  #- name: launch download of data
    #command: "screen -dmS download bash -c '/home/ubuntu/astrocompute/pipeline/scripts/parallel_download.sh /home/ubuntu/astrocompute/pipeline/data/target-BAND`python /home/ubuntu/astrocompute/pipeline/scripts/get_band.py`.txt'; sleep 1"
    #async: 45
    #poll: 0
    #when: data_downloaded.stat.exists == False
    #tags:
    #- download
    
  
  
  
  
  