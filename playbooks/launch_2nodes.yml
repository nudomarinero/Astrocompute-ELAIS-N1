---
- name: Create a LOFAR-node instances
  hosts: localhost
  vars:
    count: 2
    startindex: 1
  tasks:
  - name: start the instances
    ec2:
      image: ami-57f2513c
      region: us-east-1
      instance_type: t2.micro
      key_name: jsmkey
      group: [ska]
      instance_tags: { type: node, env: production }
      wait: yes
      exact_count: "{{ count }}"
      count_tag: { type: node }
    register: ec2
      
  - name: add the instance to the inventory
    add_host: name={{ item.public_ip }} groups=node,production
    with_items: ec2.tagged_instances
    when: item.public_ip is defined
    
  - name: create identifier sequence for tagging
    debug: msg="{{ item }}"
    with_sequence: start="{{ startindex }}" count="{{ count }}" format=%02d
    no_log: true # mute output
    register: sequence
    tags:
      - tag
  
  - name: tag instances
    no_log: true
    ec2_tag:
      resource: "{{ item.0.id }}"
      region: us-east-1
      tags:        
        Name: "worker{{ item.1.msg }}"
        env: "production"
        type: node
        ID: "{{ item.1.msg }}"
    with_together:
      - ec2.tagged_instances
      - sequence.results
    tags:
      - tag
  
  - name: update dns records
    route53:
      command: create
      zone: "lofarcloud.uk"
      record: "worker{{ item.1.msg }}.lofarcloud.uk"
      type: CNAME
      ttl: 300
      value: "{{ item.0.public_dns_name }}"
      overwrite: True
    with_together:
      - ec2.tagged_instances
      - sequence.results
    tags:
      - dns
        
  - name: wait for the ssh server
    wait_for: host={{ item.public_dns_name }} port=22 search_regex=OpenSSH
    with_items: ec2.tagged_instances
    when: item.public_dns_name is defined
  
